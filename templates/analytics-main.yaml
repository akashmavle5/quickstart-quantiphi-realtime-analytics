AWSTemplateFormatVersion: '2010-09-09'
Description: Creates New VPC and Bastion Host, Chime Voice Connector audio from KVS,transcribe and publish transcription, keyword-extraction and custom entity extraction results to websocket and DynamoDB table (qs-1re0264pg)
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Parameters to launch stack in a new VPC"

  AWS::CloudFormation::Interface: 
    ParameterGroups:
        - Label: 
            default: "Keywords Function Configuration"
          Parameters: 
            - KeywordsFileName
        - Label: 
            default: "Web App Configuration."
          Parameters: 
            - KeyPairName
            - CIDR
            - MinCapacity
            - MaxCapacity
            - DesiredCapacity
            - WebAppInstanceType
        - Label: 
            default: "VPC Configuration"
          Parameters: 
            - AvailabilityZones
            - VPCCIDR
            - PublicSubnet1CIDR
            - PublicSubnet2CIDR
            - PrivateSubnet1CIDR
            - PrivateSubnet2CIDR
        - Label:
            default: "Linux Bastion Configuration"
          Parameters:
            - NumBastionHosts
            - BastionTenancy
            - EnableBanner
            - BastionBanner
            - EnableTCPForwarding
            - EnableX11Forwarding
            - RemoteAccessCIDR
        - Label:
            default: "Bastion Host Instance Configuration."
          Parameters:
            - BastionAMIOS
            - BastionInstanceType
        - Label: 
            default: "Quick Start Configuration"
          Parameters: 
            - QSS3BucketName
            - QSTagValue
            - QSS3KeyPrefix
        

    ParameterLabels: 
      QSS3BucketName:
        default: Your configured S3 bucket with all artifacts for the Quickstart.
      QSTagValue:
        default: A tag that will act as an identifier prefix for all assets.
      QSS3KeyPrefix:
        default: The folder name in the artifacts S3 bucket where you want to sync the Git repo.
      AvailabilityZones:
        default: Availability Zones.
      KeywordsFileName:
        default: The file name for the keywords function.
      KeyPairName:
        default: The keypair name of the key to ssh into the web app ec2 instances and bastion host.
      CIDR:
        default: CIDR to limit the web app access.
      VPCCIDR:
        default: CIDR for the new VPC.
      PublicSubnet1CIDR:
        default: CIDR for the Public Subnet 1.
      PublicSubnet2CIDR:
        default: CIDR for the Public Subnet 2.
      PrivateSubnet1CIDR:
        default: CIDR for the Private Subnet 1.
      PrivateSubnet2CIDR:
        default: CIDR for the Private Subnet 2.
      BastionAMIOS:
        default: Bastion AMI operating system.
      BastionTenancy:
        default: Tenancy of the bastion host.
      BastionBanner:
        default: Banner text that will appear when ssh into the host.
      BastionInstanceType:
        default: Bastion host instance type.
      EnableBanner:
        default: Option to enable bastion banner.
      EnableTCPForwarding:
        default: Option to enable TCP forwarding.
      EnableX11Forwarding:
        default: Option to enable X11 forwarding.
      NumBastionHosts:
        default: Number of bastion hosts needed.
      RemoteAccessCIDR:
        default: Option to allow only connections from certain CIDR to access bastion host.
      MinCapacity:
        default: Minimum capacity of Web App ASG.
      MaxCapacity:
        default: Maximum capacity of Web App ASG.
      DesiredCapacity:
        default: Desired capacity of Web App ASG.
      WebAppInstanceType:
        default: 'Amazon EC2 web app instance type.'

Parameters:
  QSS3BucketName:
    Description: The S3 bucket created for your copy of Quick Start assets.
    Type: String
    Default: 'aws-quickstart'
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
  QSTagValue:
    Description: 'Tag value to be attached to resource names.'
    Type: String
    Default: 'qs-test'
    MaxLength: 10
    MinLength: 5
  QSS3KeyPrefix:
    Type: String
    Description: 'The S3 key name prefix used for your copy of Quick Start assets.'
    Default: 'quickstart-quantiphi-realtime-analytics/'
    AllowedPattern: ^(?![\/\s])[0-9a-zA-Z-\/]*\/$
  KeywordsFileName:
    AllowedPattern: ^.*.txt$
    Description: 'The file where Keywords are stored for the Keywords Function.'
    Type: String
    Default: 'kw_50_updated.txt'
  KeyPairName:
    Description: 'The name of KeyPair which is used to ssh into EC2 instance.'
    Type: String
    Default: 'quickstart-analytics'
  CIDR: 
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: 'CIDR to restrict access to web application.'
    Type: String
    Default: "0.0.0.0/0"
  MinCapacity:
    AllowedValues:
      - '1'
      - '2'
      - '3'
      - '4'
    Default: '1'
    Description: 'The minimum number of webapp hosts to be maintained. The minimum number is one.'
    Type: String
  MaxCapacity:
    AllowedValues:
      - '3'
      - '4'
    Default: '4'
    Description: 'The maximum number of webapp hosts to be scaled out. The maximum number is four.'
    Type: String
  DesiredCapacity:
    AllowedValues:
      - '1'
      - '2'
      - '3'
      - '4'
    Default: '2'
    Description: 'The desired number of webapp hosts to create. The maximum number is four.'
    Type: String
  WebAppInstanceType:
    Description: 'Amazon EC2 instance type for the web app instances.'
    Type: String
    Default: 't2.medium'
    AllowedValues:
      - 't2.medium'
      - 't2.large'
      - 't3.medium'
      - 't3.large'
      - 't3.xlarge'
      - 't3.2xlarge'
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Note:
      The logical order is preserved and only 2 AZs are used for this deployment.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$|^$
    Description: 'Please enter the IP range (CIDR notation) for this VPC.'
    Type: String
    Default: '10.192.0.0/16'
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$|^$
    Description: 'Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone.'
    Type: String
    Default: '10.192.10.0/24'
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$|^$
    Description: 'Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone.'
    Type: String
    Default: '10.192.11.0/24'
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$|^$
    Description: 'Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone.'
    Type: String
    Default: '10.192.20.0/24'
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$|^$
    Description: 'Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone.'
    Type: String
    Default: '10.192.21.0/24'
  BastionAMIOS:
    AllowedValues:
      - 'Amazon-Linux2-HVM'
      - 'CentOS-7-HVM'
      - 'Ubuntu-Server-20.04-LTS-HVM'
      - 'SUSE-SLES-15-HVM'
      - ''
    Default: Amazon-Linux2-HVM
    Description: 'The linux distribution for the AMI to be used for the bastion instances.'
    Type: String
  BastionBanner:
    Default: ""
    Description: 'Banner text to display upon login.'
    Type: String
  BastionTenancy:
    Description: "VPC tenancy to launch the bastion in. Options: dedicated or default"
    Type: String
    Default: 'default'
    AllowedValues:
      - 'dedicated'
      - 'default'
      - ''
  BastionInstanceType:
    Description: 'Amazon EC2 instance type for the bastion instances.'
    Type: String
    Default: 't2.micro'
    AllowedValues:
      - 't2.nano'
      - 't2.micro'
      - 't2.small'
      - 't2.medium'
      - 't2.large'
      - 't3.micro'
      - 't3.small'
      - 't3.medium'
      - 't3.large'
      - 't3.xlarge'
      - 't3.2xlarge'
      - 'm3.large'
      - 'm3.xlarge'
      - 'm3.2xlarge'
      - 'm4.large'
      - 'm4.xlarge'
      - 'm4.2xlarge'
      - 'm4.4xlarge'
      - ''
  EnableBanner:
    AllowedValues:
      - 'true'
      - 'false'
      - ''
    Default: 'false'
    Description: 'To include a banner to be displayed when connecting via SSH to the bastion, choose true.'
    Type: String
  EnableTCPForwarding:
    Type: String
    Description: 'To enable TCP forwarding, choose true.'
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
      - ''
  EnableX11Forwarding:
    Type: String
    Description: 'To enable X11 forwarding, choose true.'
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
      - ''
  NumBastionHosts:
    AllowedValues:
      - '1'
      - '2'
      - '3'
      - '4'
      - ''
    Default: '1'
    Description: 'The number of bastion hosts to create. The maximum number is four.'
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$|^$
    ConstraintDescription: 'CIDR block parameter must be in the form x.x.x.x/x'
    Description: 'Allowed CIDR block for external SSH access to the bastions'
    Type: String

Conditions:
  UsingDefaultBucket: 
    Fn::Equals: 
    - !Ref QSS3BucketName
    - 'aws-quickstart'

Resources:
  LambdaFunctionIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
            - s3.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"

  LambdaFunctionIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join
        - ''
        - - !Ref 'LambdaFunctionIAMRole'
          - _policy
      Roles:
      - Ref: LambdaFunctionIAMRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - "logs:CreateLogGroup"
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          Resource:
          - arn:aws:logs:*:*:*
        - Effect: Allow
          Action:
          - "s3:GetObject"
          - "s3:GetObjectTagging"
          - "s3:PutObject"
          - "s3:PutObjectTagging"
          - "s3:DeleteObject"
          Resource:
          - "arn:aws:s3:*:*:accesspoint/*"
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref RegionalArtifactBucket
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref RegionalArtifactBucket
              - '/*'
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref QSS3BucketName
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref QSS3BucketName
              - '/*'
        - Effect: Allow
          Action:
          - "iam:GetRole"
          - "iam:PassRole"
          Resource:
          - !GetAtt LambdaFunctionIAMRole.Arn
        - Effect: Allow
          Action:
          - lambda:InvokeFunction
          Resource:
          - "*"
  
  RegionalArtifactBucket:
    Type: AWS::S3::Bucket

  CopyZipsFunction:
    DependsOn:
    - LambdaFunctionIAMPolicy
    Type: AWS::Lambda::Function
    Properties:
      Description: Copies objects from a source S3 bucket to a destination.
      Handler: index.handler
      Runtime: python3.6
      Role: !GetAtt LambdaFunctionIAMRole.Arn
      Timeout: 240
      Code:
        ZipFile: !Join
          - "\n"
          - - import json
            - import logging
            - import threading
            - import boto3
            - import cfnresponse
            - ''
            - 'def copy_objects(source_bucket, dest_bucket, prefix, objects):'
            - '   s3 = boto3.client(''s3'')'
            - '   for o in objects:'
            - '       key = prefix + o'
            - '       copy_source = {'
            - '           ''Bucket'': source_bucket,'
            - '           ''Key'': key'
            - '       }'
            - '       print((''copy_source: %s'' % copy_source))'
            - '       print((''dest_bucket = %s''%dest_bucket))'
            - '       print((''key = %s'' %key))'
            - '       s3.copy_object(CopySource=copy_source, Bucket=dest_bucket,'
            - '             Key=key)'
            - ''
            - 'def delete_objects(bucket, prefix, objects):'
            - '   s3 = boto3.client(''s3'')'
            - '   objects = {''Objects'': [{''Key'': prefix + o} for o in objects]}'
            - '   s3.delete_objects(Bucket=bucket, Delete=objects)'
            - ''
            - 'def timeout(event, context):'
            - '   logging.error(''Execution is about to time out, sending failure
              response to CloudFormation'')'
            - '   cfnresponse.send(event, context, cfnresponse.FAILED, {}, None)'
            - ''
            - 'def handler(event, context):'
            - '   # make sure we send a failure to CloudFormation if the function'
            - '   # is going to timeout'
            - '   timer = threading.Timer((context.get_remaining_time_in_millis()'
            - '             / 1000.00) - 0.5, timeout, args=[event, context])'
            - '   timer.start()'
            - '   print((''Received event: %s'' % json.dumps(event)))'
            - '   status = cfnresponse.SUCCESS'
            - '   try:'
            - '       source_bucket = event[''ResourceProperties''][''SourceBucket'']'
            - '       dest_bucket = event[''ResourceProperties''][''DestBucket'']'
            - '       prefix = event[''ResourceProperties''][''Prefix'']'
            - '       objects = event[''ResourceProperties''][''Objects'']'
            - '       if event[''RequestType''] == ''Delete'':'
            - '           delete_objects(dest_bucket, prefix, objects)'
            - '       else:'
            - '           copy_objects(source_bucket, dest_bucket, prefix, objects)'
            - '   except Exception as e:'
            - '       logging.error(''Exception: %s'' % e, exc_info=True)'
            - '       status = cfnresponse.FAILED'
            - '   finally:'
            - '       timer.cancel()'
            - '       cfnresponse.send(event, context, status, {}, None)'
            - ''
  
  CopyZips:
    Type: Custom::CopyZips
    Properties:
      ServiceToken: !GetAtt 'CopyZipsFunction.Arn'
      DestBucket: !Ref 'RegionalArtifactBucket'
      SourceBucket: !Ref 'QSS3BucketName'
      Prefix: !Ref 'QSS3KeyPrefix'
      Objects:
        - "templates/analytics.yaml"
        - "submodules/quickstart-linux-bastion/scripts/auditing_configure.sh"
        - "submodules/quickstart-linux-bastion/scripts/banner_message.txt"
        - "submodules/quickstart-linux-bastion/scripts/bastion_bootstrap.sh"
        - "submodules/quickstart-linux-bastion/templates/linux-bastion.template"
        - "submodules/quickstart-linux-bastion/templates/linux-bastion-master.template"
        - "submodules/quickstart-aws-vpc/templates/aws-vpc.template"

  VPCStack:
    DependsOn: CopyZips
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL:
        !Sub 
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template
        - S3Region: !Ref 'AWS::Region'
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref RegionalArtifactBucket]
      Parameters:
        AvailabilityZones: !Join
          - ','
          - !Ref 'AvailabilityZones'
        VPCCIDR: !Ref VPCCIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        PrivateSubnet1ACIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2ACIDR: !Ref PrivateSubnet2CIDR
  
  BastionStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: 
        !Sub 
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template
        - S3Region: !Ref 'AWS::Region'
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref RegionalArtifactBucket]
      Parameters:
        BastionAMIOS: !Ref BastionAMIOS
        BastionHostName: !Sub '${QSTagValue}-bastion-host'
        BastionBanner: !Ref BastionBanner
        BastionInstanceType: !Ref BastionInstanceType
        BastionTenancy: !Ref BastionTenancy
        EnableBanner: !Ref EnableBanner
        EnableTCPForwarding: !Ref EnableTCPForwarding
        EnableX11Forwarding: !Ref EnableX11Forwarding
        KeyPairName: !Ref KeyPairName
        NumBastionHosts: !Ref NumBastionHosts
        PublicSubnet1ID: !GetAtt 
          - VPCStack
          - Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt 
          - VPCStack
          - Outputs.PublicSubnet2ID
        QSS3BucketRegion: !Ref AWS::Region
        QSS3BucketName: 
          Fn::If:
          - UsingDefaultBucket
          - !Sub '${QSS3BucketName}-${AWS::Region}'
          - !Ref RegionalArtifactBucket
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/quickstart-linux-bastion/'
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        VPCID: !GetAtt 
          - VPCStack
          - Outputs.VPCID

  AnalyticsStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL:
        !Sub 
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/analytics.yaml
        - S3Region: !Ref 'AWS::Region'
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref RegionalArtifactBucket]
      Parameters:
        QSTagValue: !Ref QSTagValue
        QSS3BucketName: !Ref 'QSS3BucketName'
        KeywordsFileName: !Ref KeywordsFileName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        VPCID: !GetAtt VPCStack.Outputs.VPCID
        SubnetID1: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        SubnetID2: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
        SubnetIDs: !Join [ ",", [ !GetAtt VPCStack.Outputs.PublicSubnet1ID, !GetAtt VPCStack.Outputs.PublicSubnet2ID ]]
        MinCapacity: !Ref MinCapacity
        MaxCapacity: !Ref MaxCapacity
        DesiredCapacity: !Ref DesiredCapacity
        BastionSecurityGroupId: !GetAtt BastionStack.Outputs.BastionSecurityGroupID
        CIDR: !Ref CIDR
        KeyPairName: !Ref KeyPairName
        WebAppInstanceType: !Ref WebAppInstanceType
        
Outputs:
  RecordingBucket:
    Description: The Name of Audio Recording Bucket
    Value: !GetAtt AnalyticsStack.Outputs.RecordingBucket

  MergedRecordingBucket:
    Description: The Name of Merged Recording Bucket
    Value: !GetAtt AnalyticsStack.Outputs.MergedRecordingBucket

  SourceArtifactBucket:
    Description: The Name of Source Artifact Bucket
    Value: !GetAtt AnalyticsStack.Outputs.SourceArtifactBucket
 
  LiveCallsTranscriptionTable:
    Description: Transcription table
    Value: !GetAtt AnalyticsStack.Outputs.LiveCallsTranscriptionTable
 
  LiveCallsMetadataTable:
    Description: Live Call MetaData table
    Value: !GetAtt AnalyticsStack.Outputs.LiveCallsMetadataTable

  TranscriptionWebsocketConnectionTable:
    Description: The name of Connection table
    Value: !GetAtt AnalyticsStack.Outputs.TranscriptionWebsocketConnectionTable

  TranscriptionKeywordExtractionTable:
    Description: The name of Keywords table
    Value: !GetAtt AnalyticsStack.Outputs.TranscriptionKeywordExtractionTable

  LoadBalancerDNSAddr:
    Description: DNS Address of the Load-Balancer
    Value: !GetAtt AnalyticsStack.Outputs.LoadBalancerDNSAddr
